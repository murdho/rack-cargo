# frozen_string_literal: true

module Rack
  module Cargo
    module ResponseBuilder
      class << self
        def call(request, state)
          app_response = state.fetch(:app_response)

          name = request.fetch(REQUEST_NAME, autogenerated_name)

          state[:response] = {
            RESPONSE_NAME => name,
            RESPONSE_PATH => request.fetch(REQUEST_PATH),
            RESPONSE_STATUS => app_response.fetch(:status),
            RESPONSE_HEADERS => app_response.fetch(:headers),
            RESPONSE_BODY => response_body(app_response.fetch(:body))
          }
        end

        private

        def autogenerated_name
          "unnamed_#{SecureRandom.hex(6)}"
        end

        # Transform body object to String according to
        # Rack specification requirements.
        def response_body(app_response_body)
          response_string = ""
          app_response_body.each { |piece| response_string += piece }
          return if response_string.empty?

          JSON.parse(response_string)
        end
      end
    end
  end
end
